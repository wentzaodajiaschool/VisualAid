@font-face {
	font-family: 'Open Huninn';
	src: url('https://cdn.jsdelivr.net/gh/justfont/open-huninn-font@master/font/jf-openhuninn-1.1.ttf') format('truetype');
}

body {
	background-color: black;
	margin: 0;
	font-family: 'Noto Sans TC', sans-serif;
	overflow: hidden;
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100vh;
}

.video-container {
	position: relative;
	width: 100vw;
	height: 100vh;
}

video {
	border-radius: 15px;
	width: 100%; 
	height: 100%;
	object-fit: contain;
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

.controls {
	display: flex;
	justify-content: space-evenly;
	width: 100%;
	position: absolute;
	bottom: 10px;
	left: 0;
}

button, .resize-group {
	flex: 1;
	margin: 5px;
	display: flex;
	justify-content: center;
	align-items: center;
	padding: 10px;
	background-color: rgba(0, 0, 0, 0.7);
	color: white;
	border: none;
	border-radius: 5px;
	cursor: pointer;
	transition: background-color 0.3s;
}

/* button:hover, .resize-group:hover {
	background-color: rgba(0, 0, 0, 0.9);
} */

button:not(.camera-group):hover {
	background-color: white;
	color:black;
}

.resize-group {
	flex-direction: row;
	justify-content: space-between;
	padding: 0;
}

.resize-group span {
	flex: 2;
	text-align: center;
	padding: 10px 0;
}

.resize-group button {
	flex: 1;
}

#transcript {
	position: absolute;
	font-size: 3em;
	color: white;
	text-shadow: 2px 2px 4px black; 
	z-index: 3;
	top: 2%;
	left: 50%;
	transform: translateX(-50%);
	padding: 5px 10px;
	border-radius: 10px;
	background: rgba(0, 0, 0, 0.6);
}

#transcript:empty {
	display: none;
}

button i {
	margin-right: 5px;  /* 增加圖示和文字之間的間隔 */
}

.camera-button-group {
	display: flex;
	flex-direction: row;
	justify-content: center;
}

.camera-button-group button {
	margin: 0 5px;
}

.active-camera {
	background-color: white;
	color: black;
}

.eventNameContainer {
	z-index: 3;
	position: absolute;
	top: 10px;
	left: 10px;
	width: auto;
	display: inline-block;
}

#eventName {
	font-family: 'Open Huninn', 'Noto Sans TC', sans-serif;
	font-weight: bold;
	color: rgba(139, 125, 107); 
	/* -webkit-text-stroke: 2px rgba(139, 125, 107, 0.8); /* 深米色的外框，且設置透明度為0.8 */
	/* text-stroke: 2px rgba(139, 125, 107, 0.8); /* 深米色的外框，且設置透明度為0.8，但請注意這個屬性不是所有瀏覽器都支援 */
	font-size: 30px;
	cursor: pointer;
	display: inline-block;
	padding: 5px 10px 5px 5px;
	position: relative;
	border: none;
	background-color: rgba(255, 248, 220);  /* 添加半透明的黑色背景 */
	border-radius: 10px;  /* 添加圓角 */
}


.resizeHandle {
	display: none; /* 預設隱藏拖曳點 */
	width: 10px;
	height: 10px;
	background-color: white;
	position: absolute;
	bottom: 5px;
	right: 5px;
	cursor: se-resize;
}

#eventName:hover .resizeHandle {
	display: inline-block; /* 滑鼠移過時顯示拖曳點 */
}

.toggle-group {
	display: flex;
}

#toggleControlsButton {
	font-size: 1.5rem;
	position: fixed;
	bottom: 10px;
	right: 10px;
	background-color: transparent;  /* 透明背景 */
	color: white;  /* 白色齒輪圖示 */
	border: none;
	width: 50px;   /* 固定寬度 */
	height: 50px;  /* 固定高度 */
	display: flex;  /* 使用flexbox佈局 */
	justify-content: center;  /* 水平居中 */
	align-items: center;  /* 垂直居中 */
	padding: 0;    /* 移除內部填充 */
	cursor: pointer;
	transition: transform 0.3s ease;
	z-index: 5;  
}



#toggleControlsButton i {
	display: inline-block;
	vertical-align: middle;
}

#toggleControlsButton:hover {
	transform: scale(1.1);  /* 悬停时略微放大 */
}

#pipButton {
	font-size: 1.5rem;
	position: fixed;
	bottom: 70px;  /* 調整位置以使其位於toggleControlsButton上方 */
	right: 10px;
	background-color: transparent;  /* 透明背景 */
	color: white;  /* 白色齒輪圖示 */
	border: none;
	width: 50px;   /* 固定寬度 */
	height: 50px;  /* 固定高度 */
	display: flex;  /* 使用flexbox佈局 */
	justify-content: center;  /* 水平居中 */
	align-items: center;  /* 垂直居中 */
	padding: 0;    /* 移除內部填充 */
	cursor: pointer;
	transition: transform 0.3s ease;
	z-index: 6;  /* 使其始終位於toggleControlsButton之上 */
}

#pipButton i {
	display: inline-block;
	vertical-align: middle;
}

#pipButton:hover {
	transform: scale(1.1);  /* 悬停时略微放大 */
}

.controls-container.collapsed .controls {
	transform: translateY(120%);
	transition: transform 0.3s ease-out;
}

.controls-container .controls {
	transition: transform 0.3s ease-out;
}
